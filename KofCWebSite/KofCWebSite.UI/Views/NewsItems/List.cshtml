@model KofCWebSite.Core.Models.NewsItemsListViewModel
@using jQWidgets.AspNetCore.Mvc.TagHelpers;

@{ var NewsItem = Model.NewsItems.FirstOrDefault();}
    <div class="section-header wow fadeInRight" style="visibility:hidden;">
        <h2><span class="fa fa-file-alt"></span> @Model.Title</h2>
    </div>
<a class="btn btn-sm btn-primary" asp-controller="NewsItems" asp-action="Create">
    <span class="fa fa-plus"></span>&nbsp; Create New News Item
</a>
<hr />

<section style="margin-bottom:54px;">
    <jqx-grid id="gridNewsItems" auto-height="true" width="100%" server-processing="true"
              alt-rows="true" pageable="true" theme="material" filterable="false" auto-row-height="true"
              selection-mode="none" sortable="false" enable-hover="false" editable="false" show-status-bar="true" show-tool-bar="true"
              columns-auto-resize="true"
              page-size="10" page-size-options="@(new List<string>() { "4", "5", "10"})" source-id="Id"
              source-total-records="TotalRecords"
              source-url="@Url.Action("GetJqPageData","NewsItems")" source-root="NewsItems" source-model="NewsItem">

        <jqx-grid-columns>
            <jqx-grid-column datafield-for="@(NewsItem.Id)" sortable="false" width="30px" text="Id"></jqx-grid-column>
            <jqx-grid-column datafield-for="@(NewsItem.Headline)" sortable="false" width="auto" text="Headline"></jqx-grid-column>
            <jqx-grid-column datafield-for="@(NewsItem.AuthorFullName)" sortable="false" width="auto" text="Author"></jqx-grid-column>
            <jqx-grid-column datafield-for="@(NewsItem.FormattedPublishStart)" sortable="false" width="80px" text="Publish Start"></jqx-grid-column>
            <jqx-grid-column datafield-for="@(NewsItem.FormattedPublishStop)" sortable="false" width="80px" text="Publish Stop"></jqx-grid-column>
            <jqx-grid-column datafield-for="@(NewsItem.IsPinned)" sortable="false" width="auto" text="Pinned"></jqx-grid-column>
            <jqx-grid-column datafield-for="@(NewsItem.IsVisible)" sortable="false" width="auto" text="Visibile"></jqx-grid-column>
            @if (Model.ShowAdminButtons)
            {
                <jqx-grid-column column-type="custom" cells-renderer=BtnCellsRenderer() width="auto" text="Actions"></jqx-grid-column>
            }
        </jqx-grid-columns>
    </jqx-grid>
</section>

<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="ConfirmRemoval" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">Confirm Removal</div>
            <div class="modal-body"> </div>
            <div class="modal-footer">
                <button id="btnDeleteCancel" type="button" class="btn btn-default" data-dismiss="modal"><span class="fa fa-undo"></span> Cancel</button>
                <a id="btnDeleteGo" class="btn btn-warning btn-ok" data-dismiss="modal"><span class="fa fa-minus-square"></span> Delete</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function OnEditClick(id, name) {
            window.location = "/NewsItems/Edit/" + id;
        }

        function OnDetailsClick(id) {
            window.location = "/NewsItems/Details/" + id;
        }

        function OnDetailsClick(id) {
            window.location = "/NewsItems/Details/" + id;
        }

        function OnRemoveClick(id, name) {

            $("#confirm-delete").find(".modal-body").html(`Are you sure you want to remove news item?`);
            $("#confirm-delete").modal({
                backdrop: 'static'
            })
                .on('click', '#btnDeleteGo', function (e) {
                    e.preventDefault();
                    $.ajax({
                        async:false,
                        method: "POST",
                        url: "/NewsItems/DeleteById",
                        data: { "NewsItemId": id },
                        complete: function (data) {
                            location.reload();
                        },
                        dataType: "application/json"
                    });
                });
        }

        function BtnCellsRenderer(row) {
            var data = $('#gridNewsItems').jqxGrid('getrowdata', row);
            var id = data.Id;

            var NewsItemTitle = data.Title;
            console.log(NewsItemTitle);
            var classViewBtn = "btn btn-sm btn-info btn-jqxgrid-input-sm";
            var classEditBtn = "btn btn-sm btn-primary btn-jqxgrid-input-sm";
            var classDelBtn = "btn btn-sm btn-warning btn-jqxgrid-input-sm";
            btnView = `<button onclick="OnDetailsClick(${id})" class='${classViewBtn}' data-toggle="tooltip" title="View News Item"><span class='fa fa-eye'></span></button>`;
            btnEdit = `<button onclick="OnEditClick(${id}, '${NewsItemTitle}')" class='${classEditBtn}' data-toggle="tooltip" title="Edit News Item"><span class='fa fa-edit'></span></button>`;
            btnSeparator = "&nbsp;&nbsp;";
            btnDelete = `<button onclick="OnRemoveClick(${id}, '${NewsItemTitle}')" class='${classDelBtn}' data-toggle="tooltip" title="Delete News Item"><span class='fa fa-ban'></span></button>`;
            newVal = btnSeparator + btnView + btnSeparator + btnEdit + btnSeparator + btnDelete;
            return newVal;
        }
    </script>
}
